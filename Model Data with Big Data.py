data from 337 peptides 5 test samples

Epoch [1/100], Loss: 0.8764
Epoch [2/100], Loss: 1.5316
Epoch [3/100], Loss: 0.8785
Epoch [4/100], Loss: 2.2009
Epoch [5/100], Loss: 1.1933
Epoch [6/100], Loss: 1.0334
Epoch [7/100], Loss: 1.1984
Epoch [8/100], Loss: 0.9580
Epoch [9/100], Loss: 0.8852
Epoch [10/100], Loss: 1.5004
Epoch [11/100], Loss: 1.2035
Epoch [12/100], Loss: 1.0053
Epoch [13/100], Loss: 1.2932
Epoch [14/100], Loss: 1.2416
Epoch [15/100], Loss: 1.1130
Epoch [16/100], Loss: 1.7071
Epoch [17/100], Loss: 1.1375
Epoch [18/100], Loss: 0.9614
Epoch [19/100], Loss: 1.2142
Epoch [20/100], Loss: 0.8727
Epoch [21/100], Loss: 1.0340
Epoch [22/100], Loss: 1.7061
Epoch [23/100], Loss: 1.7789
Epoch [24/100], Loss: 0.8903
Epoch [25/100], Loss: 0.8679
Epoch [26/100], Loss: 1.2077
Epoch [27/100], Loss: 1.3287
Epoch [28/100], Loss: 0.8663
Epoch [29/100], Loss: 0.8696
Epoch [30/100], Loss: 1.1097
Epoch [31/100], Loss: 1.1971
Epoch [32/100], Loss: 0.8541
Epoch [33/100], Loss: 1.0967
Epoch [34/100], Loss: 0.9512
Epoch [35/100], Loss: 0.9489
Epoch [36/100], Loss: 1.0369
Epoch [37/100], Loss: 1.0379
Epoch [38/100], Loss: 0.9131
Epoch [39/100], Loss: 1.2406
Epoch [40/100], Loss: 1.1240
Epoch [41/100], Loss: 1.1953
Epoch [42/100], Loss: 1.2184
Epoch [43/100], Loss: 1.1567
Epoch [44/100], Loss: 0.8116
Epoch [45/100], Loss: 0.9206
Epoch [46/100], Loss: 0.8761
Epoch [47/100], Loss: 0.7980
Epoch [48/100], Loss: 0.9700
Epoch [49/100], Loss: 1.4447
Epoch [50/100], Loss: 0.8622
Epoch [51/100], Loss: 1.2619
Epoch [52/100], Loss: 0.8638
Epoch [53/100], Loss: 0.9925
Epoch [54/100], Loss: 1.0411
Epoch [55/100], Loss: 0.9917
Epoch [56/100], Loss: 0.9532
Epoch [57/100], Loss: 0.8674
Epoch [58/100], Loss: 1.4125
Epoch [59/100], Loss: 0.7881
Epoch [60/100], Loss: 1.6137
Epoch [61/100], Loss: 1.2535
Epoch [62/100], Loss: 0.7798
Epoch [63/100], Loss: 0.8683
Epoch [64/100], Loss: 1.2734
Epoch [65/100], Loss: 0.9547
Epoch [66/100], Loss: 1.0783
Epoch [67/100], Loss: 0.9616
Epoch [68/100], Loss: 0.7727
Epoch [69/100], Loss: 0.7788
Epoch [70/100], Loss: 1.2629
Epoch [71/100], Loss: 1.1999
Epoch [72/100], Loss: 1.1419
Epoch [73/100], Loss: 0.9262
Epoch [74/100], Loss: 1.0331
Epoch [75/100], Loss: 0.9484
Epoch [76/100], Loss: 0.8700
Epoch [77/100], Loss: 1.1973
Epoch [78/100], Loss: 0.8230
Epoch [79/100], Loss: 1.0976
Epoch [80/100], Loss: 0.9257
Epoch [81/100], Loss: 0.7791
Epoch [82/100], Loss: 1.3255
Epoch [83/100], Loss: 0.7595
Epoch [84/100], Loss: 0.8612
Epoch [85/100], Loss: 1.4849
Epoch [86/100], Loss: 0.8437
Epoch [87/100], Loss: 0.9312
Epoch [88/100], Loss: 0.8268
Epoch [89/100], Loss: 0.7576
Epoch [90/100], Loss: 1.0937
Epoch [91/100], Loss: 0.8613
Epoch [92/100], Loss: 1.0180
Epoch [93/100], Loss: 1.0541
Epoch [94/100], Loss: 0.7616
Epoch [95/100], Loss: 0.7739
Epoch [96/100], Loss: 0.9434
Epoch [97/100], Loss: 1.1197
Epoch [98/100], Loss: 1.1638
Epoch [99/100], Loss: 0.8658
Epoch [100/100], Loss: 1.2681
predictions:
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]])
inputs:
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.]])
number correct 2
Accuracy: 0.2222222222222222
false positives: 11
accuracy/false_positive: 0.0202020202020202





WITH CLASSWEIGHT 20
Epoch [1/400], Loss: 2.0649
Epoch [2/400], Loss: 2.1176
Epoch [3/400], Loss: 2.1367
Epoch [4/400], Loss: 2.0852
Epoch [5/400], Loss: 2.0460
Epoch [6/400], Loss: 2.0171
Epoch [7/400], Loss: 1.9395
Epoch [8/400], Loss: 1.9386
Epoch [9/400], Loss: 2.0242
Epoch [10/400], Loss: 1.9329
Epoch [11/400], Loss: 1.9481
Epoch [12/400], Loss: 1.9419
Epoch [13/400], Loss: 1.9771
Epoch [14/400], Loss: 1.9504
Epoch [15/400], Loss: 1.9410
Epoch [16/400], Loss: 1.9308
Epoch [17/400], Loss: 1.9030
Epoch [18/400], Loss: 1.9490
Epoch [19/400], Loss: 1.9423
Epoch [20/400], Loss: 1.9155
Epoch [21/400], Loss: 1.9727
Epoch [22/400], Loss: 1.9104
Epoch [23/400], Loss: 1.9298
Epoch [24/400], Loss: 2.0241
Epoch [25/400], Loss: 1.9913
Epoch [26/400], Loss: 1.9758
Epoch [27/400], Loss: 1.9247
Epoch [28/400], Loss: 1.9361
Epoch [29/400], Loss: 1.9543
Epoch [30/400], Loss: 1.8930
Epoch [31/400], Loss: 1.9605
Epoch [32/400], Loss: 1.9685
Epoch [33/400], Loss: 1.9513
Epoch [34/400], Loss: 1.9277
Epoch [35/400], Loss: 1.9729
Epoch [36/400], Loss: 1.9042
Epoch [37/400], Loss: 1.9963
Epoch [38/400], Loss: 1.9870
Epoch [39/400], Loss: 1.9656
Epoch [40/400], Loss: 1.9186
Epoch [41/400], Loss: 1.9954
Epoch [42/400], Loss: 1.9391
Epoch [43/400], Loss: 1.9358
Epoch [44/400], Loss: 1.9042
Epoch [45/400], Loss: 1.9576
Epoch [46/400], Loss: 1.9368
Epoch [47/400], Loss: 1.9470
Epoch [48/400], Loss: 1.9184
Epoch [49/400], Loss: 1.9061
Epoch [50/400], Loss: 1.8968
Epoch [51/400], Loss: 1.9347
Epoch [52/400], Loss: 1.9420
Epoch [53/400], Loss: 1.9280
Epoch [54/400], Loss: 1.9357
Epoch [55/400], Loss: 1.8864
Epoch [56/400], Loss: 1.9721
Epoch [57/400], Loss: 1.9438
Epoch [58/400], Loss: 1.9663
Epoch [59/400], Loss: 1.9948
Epoch [60/400], Loss: 1.9568
Epoch [61/400], Loss: 1.9744
Epoch [62/400], Loss: 1.9618
Epoch [63/400], Loss: 1.9456
Epoch [64/400], Loss: 1.9456
Epoch [65/400], Loss: 1.9166
Epoch [66/400], Loss: 1.9209
Epoch [67/400], Loss: 1.9441
Epoch [68/400], Loss: 1.9507
Epoch [69/400], Loss: 1.9031
Epoch [70/400], Loss: 1.9652
Epoch [71/400], Loss: 1.9855
Epoch [72/400], Loss: 2.0121
Epoch [73/400], Loss: 1.9099
Epoch [74/400], Loss: 1.9423
Epoch [75/400], Loss: 1.9577
Epoch [76/400], Loss: 1.9501
Epoch [77/400], Loss: 1.9253
Epoch [78/400], Loss: 1.8932
Epoch [79/400], Loss: 1.9688
Epoch [80/400], Loss: 1.9661
Epoch [81/400], Loss: 1.9239
Epoch [82/400], Loss: 1.9739
Epoch [83/400], Loss: 1.9065
Epoch [84/400], Loss: 1.9196
Epoch [85/400], Loss: 1.9080
Epoch [86/400], Loss: 1.9027
Epoch [87/400], Loss: 1.8963
Epoch [88/400], Loss: 1.8873
Epoch [89/400], Loss: 1.8949
Epoch [90/400], Loss: 1.9077
Epoch [91/400], Loss: 1.8921
Epoch [92/400], Loss: 1.9065
Epoch [93/400], Loss: 1.9595
Epoch [94/400], Loss: 1.8697
Epoch [95/400], Loss: 1.8456
Epoch [96/400], Loss: 1.8594
Epoch [97/400], Loss: 1.9201
Epoch [98/400], Loss: 1.8780
Epoch [99/400], Loss: 1.8259
Epoch [100/400], Loss: 1.8502
Epoch [101/400], Loss: 1.8116
Epoch [102/400], Loss: 1.8466
Epoch [103/400], Loss: 1.8963
Epoch [104/400], Loss: 1.8100
Epoch [105/400], Loss: 1.8391
Epoch [106/400], Loss: 1.8712
Epoch [107/400], Loss: 1.8511
Epoch [108/400], Loss: 1.8026
Epoch [109/400], Loss: 1.8233
Epoch [110/400], Loss: 1.8525
Epoch [111/400], Loss: 1.8472
Epoch [112/400], Loss: 1.8437
Epoch [113/400], Loss: 1.7815
Epoch [114/400], Loss: 1.8805
Epoch [115/400], Loss: 1.8980
Epoch [116/400], Loss: 1.8312
Epoch [117/400], Loss: 1.8405
Epoch [118/400], Loss: 1.8171
Epoch [119/400], Loss: 1.8908
Epoch [120/400], Loss: 1.9028
Epoch [121/400], Loss: 1.8555
Epoch [122/400], Loss: 1.8813
Epoch [123/400], Loss: 1.8921
Epoch [124/400], Loss: 1.8380
Epoch [125/400], Loss: 1.8307
Epoch [126/400], Loss: 1.8276
Epoch [127/400], Loss: 1.8725
Epoch [128/400], Loss: 1.7989
Epoch [129/400], Loss: 1.8722
Epoch [130/400], Loss: 1.8426
Epoch [131/400], Loss: 1.8464
Epoch [132/400], Loss: 1.8614
Epoch [133/400], Loss: 1.8141
Epoch [134/400], Loss: 1.8384
Epoch [135/400], Loss: 1.8513
Epoch [136/400], Loss: 1.8618
Epoch [137/400], Loss: 1.8135
Epoch [138/400], Loss: 1.8719
Epoch [139/400], Loss: 1.8866
Epoch [140/400], Loss: 1.8786
Epoch [141/400], Loss: 1.7808
Epoch [142/400], Loss: 1.8202
Epoch [143/400], Loss: 1.8164
Epoch [144/400], Loss: 1.8722
Epoch [145/400], Loss: 1.7691
Epoch [146/400], Loss: 1.8208
Epoch [147/400], Loss: 1.7999
Epoch [148/400], Loss: 1.8077
Epoch [149/400], Loss: 1.7875
Epoch [150/400], Loss: 1.8015
Epoch [151/400], Loss: 1.7761
Epoch [152/400], Loss: 1.7996
Epoch [153/400], Loss: 1.8253
Epoch [154/400], Loss: 1.7582
Epoch [155/400], Loss: 1.8266
Epoch [156/400], Loss: 1.8251
Epoch [157/400], Loss: 1.7786
Epoch [158/400], Loss: 1.7763
Epoch [159/400], Loss: 1.7604
Epoch [160/400], Loss: 1.8573
Epoch [161/400], Loss: 1.8378
Epoch [162/400], Loss: 1.8077
Epoch [163/400], Loss: 1.8062
Epoch [164/400], Loss: 1.8105
Epoch [165/400], Loss: 1.7952
Epoch [166/400], Loss: 1.7998
Epoch [167/400], Loss: 1.7969
Epoch [168/400], Loss: 1.8058
Epoch [169/400], Loss: 1.8225
Epoch [170/400], Loss: 1.8181
Epoch [171/400], Loss: 1.7947
Epoch [172/400], Loss: 1.8462
Epoch [173/400], Loss: 1.7782
Epoch [174/400], Loss: 1.7785
Epoch [175/400], Loss: 1.8297
Epoch [176/400], Loss: 1.7325
Epoch [177/400], Loss: 1.8428
Epoch [178/400], Loss: 1.7627
Epoch [179/400], Loss: 1.7787
Epoch [180/400], Loss: 1.8362
Epoch [181/400], Loss: 1.7706
Epoch [182/400], Loss: 1.7898
Epoch [183/400], Loss: 1.7285
Epoch [184/400], Loss: 1.7583
Epoch [185/400], Loss: 1.7779
Epoch [186/400], Loss: 1.8202
Epoch [187/400], Loss: 1.8256
Epoch [188/400], Loss: 1.7313
Epoch [189/400], Loss: 1.7921
Epoch [190/400], Loss: 1.8186
Epoch [191/400], Loss: 1.7520
Epoch [192/400], Loss: 1.7510
Epoch [193/400], Loss: 1.7620
Epoch [194/400], Loss: 1.7924
Epoch [195/400], Loss: 1.7969
Epoch [196/400], Loss: 1.7531
Epoch [197/400], Loss: 1.6742
Epoch [198/400], Loss: 1.7523
Epoch [199/400], Loss: 1.7631
Epoch [200/400], Loss: 1.8173
Epoch [201/400], Loss: 1.7546
Epoch [202/400], Loss: 1.7286
Epoch [203/400], Loss: 1.7671
Epoch [204/400], Loss: 1.7319
Epoch [205/400], Loss: 1.7655
Epoch [206/400], Loss: 1.7714
Epoch [207/400], Loss: 1.7623
Epoch [208/400], Loss: 1.7579
Epoch [209/400], Loss: 1.7887
Epoch [210/400], Loss: 1.7750
Epoch [211/400], Loss: 1.7245
Epoch [212/400], Loss: 1.7420
Epoch [213/400], Loss: 1.7345
Epoch [214/400], Loss: 1.7548
Epoch [215/400], Loss: 1.7533
Epoch [216/400], Loss: 1.7437
Epoch [217/400], Loss: 1.7927
Epoch [218/400], Loss: 1.7363
Epoch [219/400], Loss: 1.7512
Epoch [220/400], Loss: 1.7419
Epoch [221/400], Loss: 1.7490
Epoch [222/400], Loss: 1.7838
Epoch [223/400], Loss: 1.7994
Epoch [224/400], Loss: 1.8054
Epoch [225/400], Loss: 1.7148
Epoch [226/400], Loss: 1.7207
Epoch [227/400], Loss: 1.8266
Epoch [228/400], Loss: 1.7702
Epoch [229/400], Loss: 1.7762
Epoch [230/400], Loss: 1.8216
Epoch [231/400], Loss: 1.7362
Epoch [232/400], Loss: 1.8064
Epoch [233/400], Loss: 1.7742
Epoch [234/400], Loss: 1.6825
Epoch [235/400], Loss: 1.7304
Epoch [236/400], Loss: 1.7000
Epoch [237/400], Loss: 1.7795
Epoch [238/400], Loss: 1.7551
Epoch [239/400], Loss: 1.7412
Epoch [240/400], Loss: 1.7129
Epoch [241/400], Loss: 1.7227
Epoch [242/400], Loss: 1.7380
Epoch [243/400], Loss: 1.7021
Epoch [244/400], Loss: 1.7184
Epoch [245/400], Loss: 1.6924
Epoch [246/400], Loss: 1.6993
Epoch [247/400], Loss: 1.6671
Epoch [248/400], Loss: 1.7178
Epoch [249/400], Loss: 1.7036
Epoch [250/400], Loss: 1.8215
Epoch [251/400], Loss: 1.8098
Epoch [252/400], Loss: 1.7568
Epoch [253/400], Loss: 1.7090
Epoch [254/400], Loss: 1.7253
Epoch [255/400], Loss: 1.7117
Epoch [256/400], Loss: 1.7430
Epoch [257/400], Loss: 1.7648
Epoch [258/400], Loss: 1.7582
Epoch [259/400], Loss: 1.7465
Epoch [260/400], Loss: 1.7970
Epoch [261/400], Loss: 1.7230
Epoch [262/400], Loss: 1.7109
Epoch [263/400], Loss: 1.7964
Epoch [264/400], Loss: 1.7583
Epoch [265/400], Loss: 1.7032
Epoch [266/400], Loss: 1.7462
Epoch [267/400], Loss: 1.7414
Epoch [268/400], Loss: 1.7292
Epoch [269/400], Loss: 1.7668
Epoch [270/400], Loss: 1.7261
Epoch [271/400], Loss: 1.7132
Epoch [272/400], Loss: 1.7255
Epoch [273/400], Loss: 1.7473
Epoch [274/400], Loss: 1.7768
Epoch [275/400], Loss: 1.7639
Epoch [276/400], Loss: 1.7008
Epoch [277/400], Loss: 1.7489
Epoch [278/400], Loss: 1.7585
Epoch [279/400], Loss: 1.7575
Epoch [280/400], Loss: 1.7704
Epoch [281/400], Loss: 1.7024
Epoch [282/400], Loss: 1.7724
Epoch [283/400], Loss: 1.7636
Epoch [284/400], Loss: 1.7029
Epoch [285/400], Loss: 1.7984
Epoch [286/400], Loss: 1.7472
Epoch [287/400], Loss: 1.7016
Epoch [288/400], Loss: 1.6734
Epoch [289/400], Loss: 1.6489
Epoch [290/400], Loss: 1.6848
Epoch [291/400], Loss: 1.7197
Epoch [292/400], Loss: 1.7122
Epoch [293/400], Loss: 1.7605
Epoch [294/400], Loss: 1.7067
Epoch [295/400], Loss: 1.7224
Epoch [296/400], Loss: 1.7351
Epoch [297/400], Loss: 1.7170
Epoch [298/400], Loss: 1.7449
Epoch [299/400], Loss: 1.7072
Epoch [300/400], Loss: 1.7920
Epoch [301/400], Loss: 1.6798
Epoch [302/400], Loss: 1.6608
Epoch [303/400], Loss: 1.7381
Epoch [304/400], Loss: 1.7726
Epoch [305/400], Loss: 1.7799
Epoch [306/400], Loss: 1.7308
Epoch [307/400], Loss: 1.7120
Epoch [308/400], Loss: 1.7340
Epoch [309/400], Loss: 1.7304
Epoch [310/400], Loss: 1.7876
Epoch [311/400], Loss: 1.7412
Epoch [312/400], Loss: 1.6252
Epoch [313/400], Loss: 1.6847
Epoch [314/400], Loss: 1.7344
Epoch [315/400], Loss: 1.7897
Epoch [316/400], Loss: 1.7275
Epoch [317/400], Loss: 1.7135
Epoch [318/400], Loss: 1.6960
Epoch [319/400], Loss: 1.6900
Epoch [320/400], Loss: 1.7290
Epoch [321/400], Loss: 1.6982
Epoch [322/400], Loss: 1.7201
Epoch [323/400], Loss: 1.8173
Epoch [324/400], Loss: 1.7000
Epoch [325/400], Loss: 1.7629
Epoch [326/400], Loss: 1.6757
Epoch [327/400], Loss: 1.7496
Epoch [328/400], Loss: 1.6838
Epoch [329/400], Loss: 1.6709
Epoch [330/400], Loss: 1.6999
Epoch [331/400], Loss: 1.7014
Epoch [332/400], Loss: 1.7720
Epoch [333/400], Loss: 1.6262
Epoch [334/400], Loss: 1.6945
Epoch [335/400], Loss: 1.7314
Epoch [336/400], Loss: 1.7566
Epoch [337/400], Loss: 1.7547
Epoch [338/400], Loss: 1.6350
Epoch [339/400], Loss: 1.7343
Epoch [340/400], Loss: 1.6842
Epoch [341/400], Loss: 1.7609
Epoch [342/400], Loss: 1.7689
Epoch [343/400], Loss: 1.7165
Epoch [344/400], Loss: 1.7705
Epoch [345/400], Loss: 1.7500
Epoch [346/400], Loss: 1.6816
Epoch [347/400], Loss: 1.7063
Epoch [348/400], Loss: 1.7439
Epoch [349/400], Loss: 1.7064
Epoch [350/400], Loss: 1.7452
Epoch [351/400], Loss: 1.7120
Epoch [352/400], Loss: 1.7316
Epoch [353/400], Loss: 1.6717
Epoch [354/400], Loss: 1.6950
Epoch [355/400], Loss: 1.7143
Epoch [356/400], Loss: 1.7346
Epoch [357/400], Loss: 1.7252
Epoch [358/400], Loss: 1.6831
Epoch [359/400], Loss: 1.7021
Epoch [360/400], Loss: 1.6234
Epoch [361/400], Loss: 1.7906
Epoch [362/400], Loss: 1.6375
Epoch [363/400], Loss: 1.7504
Epoch [364/400], Loss: 1.7597
Epoch [365/400], Loss: 1.6773
Epoch [366/400], Loss: 1.6591
Epoch [367/400], Loss: 1.7563
Epoch [368/400], Loss: 1.7081
Epoch [369/400], Loss: 1.7519
Epoch [370/400], Loss: 1.7332
Epoch [371/400], Loss: 1.6721
Epoch [372/400], Loss: 1.6566
Epoch [373/400], Loss: 1.6931
Epoch [374/400], Loss: 1.6897
Epoch [375/400], Loss: 1.6378
Epoch [376/400], Loss: 1.6931
Epoch [377/400], Loss: 1.6347
Epoch [378/400], Loss: 1.7408
Epoch [379/400], Loss: 1.7023
Epoch [380/400], Loss: 1.7036
Epoch [381/400], Loss: 1.7673
Epoch [382/400], Loss: 1.6843
Epoch [383/400], Loss: 1.7622
Epoch [384/400], Loss: 1.7024
Epoch [385/400], Loss: 1.7401
Epoch [386/400], Loss: 1.6583
Epoch [387/400], Loss: 1.6855
Epoch [388/400], Loss: 1.7333
Epoch [389/400], Loss: 1.6446
Epoch [390/400], Loss: 1.7542
Epoch [391/400], Loss: 1.7347
Epoch [392/400], Loss: 1.7422
Epoch [393/400], Loss: 1.6724
Epoch [394/400], Loss: 1.6917
Epoch [395/400], Loss: 1.7167
Epoch [396/400], Loss: 1.7360
Epoch [397/400], Loss: 1.6560
Epoch [398/400], Loss: 1.7552
Epoch [399/400], Loss: 1.7494
Epoch [400/400], Loss: 1.7244
torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[1., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 0., 1.,  ..., 1., 1., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 1., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 0., 1., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [1., 0., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 1., 1., 0.],
        [1., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([9, 20, 33]) torch.Size([9, 33])
predictions:
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1.],
        [1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.,
         0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
        [0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0.,
         1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
         0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
        [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
        [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1.]])
inputs:
tensor([[0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.,
         1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0.],
        [1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1.,
         0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1.],
        [1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1.,
         0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.,
         0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0.]])

Final Accuracy: 0.6516666666666666
Final Precision: 0.2857142857142857
Final Recall: 0.6516666666666666
Final F1 Score: 0.397256794513589
Total False Positives: 1955
False Positive Rate: 9.354066985645932






WITH CLASSWEIGHT 21 400 EPOCHS
predictions:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
        [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
        [1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
        [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1.]])
inputs:
tensor([[0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1.,
         1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0.],
        [1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1.,
         0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.,
         1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]])

Final Accuracy: 0.6525
Final Precision: 0.26990692864529475
Final Recall: 0.6525
Final F1 Score: 0.38185808339429406
Total False Positives: 2118
False Positive Rate: 10.133971291866029



BIG DATA CLASSWEIGHT 20 AND 400 EPOCH
Epoch [400/400], Loss: 1.6114
torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 1.],
        [1., 0., 0.,  ..., 0., 0., 1.],
        [1., 1., 1.,  ..., 0., 0., 0.]])
inputs:
tensor([[1., 0., 1.,  ..., 0., 0., 0.],
        [1., 0., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 0., 0., 0.]])
inputs:
tensor([[1., 0., 1.,  ..., 1., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 1.,  ..., 0., 1., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [1., 0., 0.,  ..., 1., 1., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [1., 0., 0.,  ..., 1., 0., 1.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 1., 1.]])
inputs:
tensor([[0., 0., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        ...,
        [1., 0., 1.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 0., 1.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.]])
inputs:
tensor([[0., 1., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
inputs:
tensor([[1., 0., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 0., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 0., 1., 1.]])
inputs:
tensor([[0., 1., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        ...,
        [1., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 1.,  ..., 0., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 1., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 1.,  ..., 0., 1., 1.],
        [1., 0., 0.,  ..., 0., 0., 1.],
        [1., 1., 1.,  ..., 0., 0., 0.]])
inputs:
tensor([[0., 0., 1.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        [1., 1., 0.,  ..., 0., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 1., 1.],
        ...,
        [1., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
inputs:
tensor([[0., 1., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 1.,  ..., 0., 0., 1.],
        ...,
        [1., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 1., 1., 1.]])
inputs:
tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 1., 1., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 1., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 1., 1.],
        [1., 0., 0.,  ..., 1., 1., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[0., 0., 0.,  ..., 0., 1., 1.],
        [1., 1., 1.,  ..., 0., 0., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 1., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[1., 1., 1.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])
inputs:
tensor([[0., 0., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        [1., 0., 0.,  ..., 0., 1., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [1., 0., 1.,  ..., 0., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        ...,
        [1., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[0., 0., 0.,  ..., 0., 1., 1.],
        [1., 0., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([100, 20, 33]) torch.Size([100, 33])
predictions:
tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [1., 0., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.]])
inputs:
tensor([[0., 0., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [1., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 1., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 1.]])

torch.Size([77, 20, 33]) torch.Size([77, 33])
predictions:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 0., 0.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 1., 1.]])

Final Accuracy: 0.796802012217032
Final Precision: 0.2537257930718842
Final Recall: 0.796802012217032
Final F1 Score: 0.38489075958430063
Total False Positives: 26089
False Positive Rate: 10.123787349631355




EPOCH=400   DROPOUT = .5   CLASSWEIGHT = 20  BIG DATA
Epoch [400/400], Loss: 1.6874
torch.Size([200, 20, 33]) torch.Size([200, 33])
predictions:
tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 0., 0., 0.]])
inputs:
tensor([[1., 1., 0.,  ..., 1., 0., 1.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        ...,
        [0., 0., 1.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([200, 20, 33]) torch.Size([200, 33])
predictions:
tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 1.,  ..., 0., 0., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([200, 20, 33]) torch.Size([200, 33])
predictions:
tensor([[0., 0., 0.,  ..., 1., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
inputs:
tensor([[0., 0., 0.,  ..., 1., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([200, 20, 33]) torch.Size([200, 33])
predictions:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 0., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([200, 20, 33]) torch.Size([200, 33])
predictions:
tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        ...,
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([200, 20, 33]) torch.Size([200, 33])
predictions:
tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 0., 0.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
inputs:
tensor([[0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([200, 20, 33]) torch.Size([200, 33])
predictions:
tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.]])

torch.Size([200, 20, 33]) torch.Size([200, 33])
predictions:
tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 0., 0., 0.]])
inputs:
tensor([[0., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([200, 20, 33]) torch.Size([200, 33])
predictions:
tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 1., 1., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([200, 20, 33]) torch.Size([200, 33])
predictions:
tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 1., 0., 1.],
        [1., 1., 0.,  ..., 1., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

torch.Size([200, 20, 33]) torch.Size([200, 33])
predictions:
tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 0., 0., 0.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [1., 0., 1.,  ..., 0., 1., 0.]])

torch.Size([200, 20, 33]) torch.Size([200, 33])
predictions:
tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 1.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.]])

torch.Size([177, 20, 33]) torch.Size([177, 33])
predictions:
tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 0., 1.,  ..., 0., 0., 0.],
        [1., 1., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
inputs:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])

Final Accuracy: 0.7948257276320517
Final Precision: 0.2118520292110619
Final Recall: 0.7948257276320517
Final F1 Score: 0.3345369302606953
Total False Positives: 32917
False Positive Rate: 12.77337989910749

EPOCH=400   DROPOUT=0.05   CLASSWEIGHT=20    BIG DATA
Final Accuracy: 0.7748832195472511
Final Precision: 0.20650690670560914
Final Recall: 0.7748832195472511
Final F1 Score: 0.3261062699657864
Total False Positives: 33145
False Positive Rate: 12.86185487000388


EPOCH=400   DROPOUT=0.40   CLASSWEIGHT=20    BIG DATA
Final Accuracy: 0.775691699604743
Final Precision: 0.21906791485907096
Final Recall: 0.775691699604743
Final F1 Score: 0.3416486973036064
Total False Positives: 30782
False Positive Rate: 11.944897167248739

EPOCH=400   DROPOUT=0.45   CLASSWEIGHT=20    BIG DATA
Final Accuracy: 0.8056054617319439
Final Precision: 0.22320673005127184
Final Recall: 0.8056054617319439
Final F1 Score: 0.34956148898850126
Total False Positives: 31210
False Positive Rate: 12.110981761738456



EPOCH=400   DROPOUT=0.45   CLASSWEIGHT=21    BIG DATA
Final Accuracy: 0.9435860582105642
Final Precision: 0.1525746241557121
Final Recall: 0.9435860582105642
Final F1 Score: 0.2626755192117734
Total False Positives: 58341
False Positive Rate: 22.639115250291034



EPOCH=400   DROPOUT=0.45   CLASSWEIGHT=11    BIG DATA
Final Accuracy: 0.6766079770032339
Final Precision: 0.267500088787868
Final Recall: 0.6766079770032339
Final F1 Score: 0.38341520527374073
Total False Positives: 20625
False Positive Rate: 8.0034924330617




EPOCH=400   DROPOUT=0.45   CLASSWEIGHT=10    BIG DATA
Final Accuracy: 0.6029464606539705
Final Precision: 0.2672187276057011
Final Recall: 0.6029464606539705
Final F1 Score: 0.3703172413793104
Total False Positives: 18406
False Positive Rate: 7.142413659293752






EPOCH=400   DROPOUT=0.45   CLASSWEIGHT=12    BIG DATA
Final Accuracy: 0.7341897233201581
Final Precision: 0.26189636940430033
Final Recall: 0.7341897233201581
Final F1 Score: 0.38607430501428947
Total False Positives: 23034
False Positive Rate: 8.938300349243306


EPOCH=400   DROPOUT=0.45   CLASSWEIGHT=13    BIG DATA
Final Accuracy: 0.7089471793029105
Final Precision: 0.25128956250398016
Final Recall: 0.7089471793029105
Final F1 Score: 0.3710564671587757
Total False Positives: 23514
False Positive Rate: 9.124563445867288




EPOCH=400   DROPOUT=0.45   CLASSWEIGHT=14    BIG DATA
Final Accuracy: 0.7087675170679123
Final Precision: 0.2327433628318584
Final Recall: 0.7087675170679123
Final F1 Score: 0.3504174809024694
Total False Positives: 26010
False Positive Rate: 10.093131548311991
